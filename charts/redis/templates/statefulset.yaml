apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis.fullname" . }}
spec:
  serviceName: "{{ include "redis.fullname" . }}"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      securityContext:
        fsGroup: 2000
      containers:
      - name: redis
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
          timeoutSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
          storageClassName: fast-storage
