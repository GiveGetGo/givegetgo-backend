"use strict";
/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PackageUrlFactory_type;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageUrlFactory = void 0;
const packageurl_js_1 = require("packageurl-js");
const packageUrl_1 = require("../_helpers/packageUrl");
const enums_1 = require("../enums");
class PackageUrlFactory {
    constructor(type) {
        _PackageUrlFactory_type.set(this, void 0);
        __classPrivateFieldSet(this, _PackageUrlFactory_type, type, "f");
    }
    get type() {
        return __classPrivateFieldGet(this, _PackageUrlFactory_type, "f");
    }
    makeFromComponent(component, sort = false) {
        const qualifiers = {};
        let subpath;
        const extRefs = sort
            ? component.externalReferences.sorted()
            : component.externalReferences;
        for (const extRef of extRefs) {
            const url = extRef.url.toString();
            if (url.length <= 0) {
                continue;
            }
            switch (extRef.type) {
                case enums_1.ExternalReferenceType.VCS:
                    [qualifiers[packageUrl_1.PackageUrlQualifierNames.VcsUrl], subpath] = url.split('#', 2);
                    break;
                case enums_1.ExternalReferenceType.Distribution:
                    qualifiers[packageUrl_1.PackageUrlQualifierNames.DownloadURL] = url;
                    break;
            }
        }
        const hashes = component.hashes;
        if (hashes.size > 0) {
            qualifiers[packageUrl_1.PackageUrlQualifierNames.Checksum] = Array.from(sort
                ? hashes.sorted()
                : hashes, ([hashAlgo, hashCont]) => `${hashAlgo.toLowerCase()}:${hashCont.toLowerCase()}`).join(',');
        }
        try {
            return new packageurl_js_1.PackageURL(__classPrivateFieldGet(this, _PackageUrlFactory_type, "f"), component.group, component.name, component.version, qualifiers, subpath);
        }
        catch {
            return undefined;
        }
    }
}
exports.PackageUrlFactory = PackageUrlFactory;
_PackageUrlFactory_type = new WeakMap();
//# sourceMappingURL=packageUrl.js.map