"use strict";
/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PackageUrlFactory_instances, _PackageUrlFactory_finalizeQualifiers;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageUrlFactory = exports.ExternalReferenceFactory = void 0;
const notUndefined_1 = require("../_helpers/notUndefined");
const packageUrl_1 = require("../_helpers/packageUrl");
const Enums = require("../enums");
const Models = require("../models");
const packageUrl_2 = require("./packageUrl");
class ExternalReferenceFactory {
    makeExternalReferences(data) {
        const refs = [];
        try {
            refs.push(this.makeVcs(data));
        }
        catch { }
        try {
            refs.push(this.makeHomepage(data));
        }
        catch { }
        try {
            refs.push(this.makeIssueTracker(data));
        }
        catch { }
        return refs.filter(notUndefined_1.isNotUndefined);
    }
    makeVcs(data) {
        const repository = data.repository;
        let url;
        let comment;
        if (typeof repository === 'object') {
            url = repository.url;
            comment = 'as detected from PackageJson property "repository.url"';
            if (typeof repository.directory === 'string' && typeof url === 'string' && url.length > 0) {
                url += '#' + repository.directory;
                comment += ' and "repository.directory"';
            }
        }
        else {
            url = repository;
            comment = 'as detected from PackageJson property "repository"';
        }
        return typeof url === 'string' && url.length > 0
            ? new Models.ExternalReference(url, Enums.ExternalReferenceType.VCS, { comment })
            : undefined;
    }
    makeHomepage(data) {
        const url = data.homepage;
        return typeof url === 'string' && url.length > 0
            ? new Models.ExternalReference(url, Enums.ExternalReferenceType.Website, { comment: 'as detected from PackageJson property "homepage"' })
            : undefined;
    }
    makeIssueTracker(data) {
        const bugs = data.bugs;
        let url;
        let comment;
        if (typeof bugs === 'object') {
            url = bugs.url;
            comment = 'as detected from PackageJson property "bugs.url"';
        }
        else {
            url = bugs;
            comment = 'as detected from PackageJson property "bugs"';
        }
        return typeof url === 'string' && url.length > 0
            ? new Models.ExternalReference(url, Enums.ExternalReferenceType.IssueTracker, { comment })
            : undefined;
    }
}
exports.ExternalReferenceFactory = ExternalReferenceFactory;
const npmDefaultRegistryMatcher = /^https?:\/\/registry\.npmjs\.org/;
class PackageUrlFactory extends packageUrl_2.PackageUrlFactory {
    constructor() {
        super(...arguments);
        _PackageUrlFactory_instances.add(this);
    }
    makeFromComponent(component, sort = false) {
        const purl = super.makeFromComponent(component, sort);
        return purl === undefined
            ? undefined
            : __classPrivateFieldGet(this, _PackageUrlFactory_instances, "m", _PackageUrlFactory_finalizeQualifiers).call(this, purl);
    }
}
exports.PackageUrlFactory = PackageUrlFactory;
_PackageUrlFactory_instances = new WeakSet(), _PackageUrlFactory_finalizeQualifiers = function _PackageUrlFactory_finalizeQualifiers(purl) {
    const qualifiers = new Map(Object.entries(purl.qualifiers ?? {}));
    const downloadUrl = qualifiers.get(packageUrl_1.PackageUrlQualifierNames.DownloadURL);
    if (downloadUrl !== undefined) {
        qualifiers.delete(packageUrl_1.PackageUrlQualifierNames.VcsUrl);
        if (npmDefaultRegistryMatcher.test(downloadUrl)) {
            qualifiers.delete(packageUrl_1.PackageUrlQualifierNames.DownloadURL);
        }
    }
    if (!qualifiers.has(packageUrl_1.PackageUrlQualifierNames.DownloadURL) && !qualifiers.has(packageUrl_1.PackageUrlQualifierNames.VcsUrl)) {
        qualifiers.delete(packageUrl_1.PackageUrlQualifierNames.Checksum);
    }
    purl.qualifiers = qualifiers.size > 0
        ? Object.fromEntries(qualifiers.entries())
        : undefined;
    return purl;
};
//# sourceMappingURL=fromNodePackageJson.node.js.map